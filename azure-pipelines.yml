# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - main

resources:
  - repo: self

# pool:
#   vmImage: ubuntu-latest

variables:
  tag: "$(Build.BuildId)"
  cg_name: "cg-infraapp"
  rg_name: "rg-infraapp"
  rg_location: "eastus"

stages:
  - stage: Build
    displayName: Build image
    pool:
      name: default
    jobs:
      - job: Build
        displayName: Build
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: "Docker Container Registry"
              repository: "crhistiancara/infraapp"
              command: "buildAndPush"
              Dockerfile: "**/Dockerfile"
              tags: |
                $(tag)
  - stage: Provision
    displayName: "Creating terraform on Azure"
    dependsOn: Build
    jobs:
      - job: provision
        displayName: "Provision container instance"
        variables: # vars from azure devOps in library
          - group: tf_vars
        steps:
          - script: |
              cd ./terraform
              set -e 
              terraform init -input=false
              terraform apply -input=false -auto-approve
            name: "RunTerraform"
            displayName: "Run Terraform"
            env: # these vars are being passed from our SampleAPIVariables that we specified in Azure DevOps
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
              ARM_TENANT_ID: $(ARM_TENANT_ID)
              ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
              TF_VAR_imagebuild: $(tag)
              TF_VAR_cg_name: $(cg_name)
              TF_VAR_rg-name: $(rg_name)
              TF_VAR_location: $(rg_location)
